Prolem:

https://leetcode.com/problems/minimum-distance-between-bst-nodes/description/


Solution:

//Time Complexity: O(n)
//Space Complexty: O(n)


class Solution {
public:
    void getInorder(TreeNode* root, vector<int> &inorder){
        if(root == NULL){
            return;
        }
        getInorder(root->left, inorder);
        inorder.push_back(root->val);
        getInorder(root->right, inorder);

    }
    int minDiffInBST(TreeNode* root) {
        vector<int> inorder;
        getInorder(root, inorder);
        int mini = INT_MAX;
        for(int i=0;i<inorder.size()-1;i++){
            mini = min(mini, inorder[i+1]-inorder[i]);
        }
        return mini;
    }
};
