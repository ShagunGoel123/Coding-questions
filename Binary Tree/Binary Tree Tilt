Problem:

https://leetcode.com/problems/binary-tree-tilt/


Solution:

//Time Complexity: O(n)
//Space Complexity: O(H)

class Solution {
public:
    int ans = 0;
    int helper(TreeNode* root){
        if(root == NULL){
            return 0;
        }
        if(root->left == NULL && root->right == NULL){
            return root->val;
        }
        int a = helper(root->left);
        int b = helper(root->right);

        /* Update the total tilt by adding the absolute difference
         between the left and right subtree sums
        */
        ans += abs(a-b);
        return root->val + a +b;
    }
    int findTilt(TreeNode* root) {
        helper(root);
        return ans;
    }
};
