Problem:

https://leetcode.com/problems/linked-list-cycle/description/


Solution:

//Time Complexity: O(n) - for traversing
//Space Complexity: O(1) - nothing stored

class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *slow = head, *fast = head;
        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
            if(slow == fast){
                return true;
            }
        }
        return false;   
    }
};
