Problem:

Given two non-negative integers, num1 and num2 represented as string,
return the sum of num1 and num2 as a string.
You must solve the problem without using any built-in library
for handling large integers (such as BigInteger).
You must also not convert the inputs to integers directly.

Example 1:
Input: num1 = "11", num2 = "123"
Output: "134"

Example 2:
Input: num1 = "456", num2 = "77"
Output: "533"

Example 3:
Input: num1 = "0", num2 = "0"
Output: "0"



Solution:

//Time Complexity: O(n)
//Space Complexity: O(n)

class Solution {
public:

int charToInt(char s){
    return s-'0';
}

char intToChar(int a){
    return a+'0';
}

string solve(string &num1,string &num2){
    if(num1.length()>num2.length()){
        swap(num1,num2);
    }
    reverse(num1.begin(),num1.end());
    reverse(num2.begin(),num2.end());
    string result = "";
    int carry = 0;

    for(int i=0;i<num1.length();i++){
        int a = charToInt(num1[i]);
        int b = charToInt(num2[i]);
        int sum = a+b+carry;
        int ans = sum%10;
        carry = sum/10;
        result += intToChar(ans);
    }

    for(int i=num1.length();i<num2.length();i++){
        int a = charToInt(num2[i]);
        int sum = a+carry;
        int ans = sum%10;
        carry = sum/10;
        result += intToChar(ans);
    }
    if(carry){
        result += "1";
    }
    reverse(result.begin(),result.end());
    return result;
}
    string addStrings(string num1, string num2) {
        return solve(num1,num2);
    }
};
 
