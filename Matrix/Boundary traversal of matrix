Problem:

You are given a matrix of dimensions n x m. The task is to perform boundary traversal on the matrix in a clockwise manner.

Example 1:
Input:
n = 4, m = 4
matrix[][] = {{1, 2, 3, 4},
         {5, 6, 7, 8},
         {9, 10, 11, 12},
         {13, 14, 15,16}}
Output: 1 2 3 4 8 12 16 15 14 13 9 5

Example 2:
Input:
n = 3, m = 4
matrrix[][] = {{12, 11, 10, 9},
         {8, 7, 6, 5},
         {4, 3, 2, 1}}
Output: 12 11 10 9 5 1 2 3 4 8



Solution:

class Solution
{   
    public:
    vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) 
    {
        vector<int>ans;
        for(int j=0;j<m;j++){
            ans.push_back(matrix[0][j]);
        }
        if(n>1)
        {
            for(int i=1;i<n;i++)
            {
                ans.push_back(matrix[i][m-1]);
            }
            if(m>1)
            {
                for(int j=m-2;j>=0;j--)
                {
                    ans.push_back(matrix[n-1][j]);
                }
                for(int i=n-2;i>=1;i--)
                {
                    ans.push_back(matrix[i][0]);
                }
            }
        }
        return ans;
    }
};
